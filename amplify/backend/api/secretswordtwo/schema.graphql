type Monster @model (
    timestamps: null
    subscriptions: null
  )
  @key(fields: ["id"])
  @auth(rules: [
    { allow: owner, ownerField: "owner", operations: [create, update, read, delete] }
    { allow: private, provider: userPools, operations: [read] }
  ])
{
  id: ID!
  owner: String
  name: String!
  description: String
  imageUrl: String!
  hp: Int!
  atk: Int!
  def: Int!
  spd: Int!
  skillId1: ID!
  skillId2: ID
  skillId3: ID
  skillId4: ID
  skill1: Skill! @connection(fields: ["skillId1"])
  skill2: Skill @connection(fields: ["skillId2"])
  skill3: Skill @connection(fields: ["skillId3"])
  skill4: Skill @connection(fields: ["skillId4"])
  timestamp: Int!
}

type Skill @model (
    timestamps: null
    subscriptions: null
  )
  @key(fields: ["id"])
  @auth(rules: [
    { allow: owner, ownerField: "owner", operations: [create, update, read, delete] }
    { allow: private, provider: userPools, operations: [read] }
  ])
  @searchable
{
  id: ID!
  owner: String
  name: String!
  description: String
  power: Int!
  hitrate: Int!
  timestamp: Int!
}
